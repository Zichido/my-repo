# bot.py
import os
import asyncio
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes

TOKEN = "8400969993:AAEpt8RHiH3Dct1tx-nFj-3g1AyDQyX-3r8"

#{—Ç–æ–ø–∏–∫_id: [—Å–ø–∏—Å–æ–∫_—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö_—Ç–µ–≥–æ–≤]}
TOPIC_RULES = {
    7: ["#–ü–∏—Å—å–∫–∏", "#–ø–∏—Å—å–∫–∏"],
    50: ["#–°–∏—Å—å–∫–∏", "#–°–∏—Å—å–∫–∏"],
    60: ["#–ß–ª–µ–Ω—ã", "#—á–ª–µ–Ω—ã"]
}

async def enforce_rules(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    if not message:
        return

    chat_id = message.chat_id
    thread_id = getattr(message, "message_thread_id", None)
    text = (message.text or "").lower()  

    print(f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ | chat_id={chat_id} | thread_id={thread_id} | text='{text}'")

    if thread_id in TOPIC_RULES:
        allowed_tags = [tag.lower() for tag in TOPIC_RULES[thread_id]]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–π —Ç–µ–≥
        if not any(tag in text for tag in allowed_tags):
            try:
                await message.delete()
                print(f"üö´ –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Ç–µ–≥–∏ {allowed_tags}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, enforce_rules))

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
app.run_polling()
